nimTitle	nodes	kdl/nodes.html	module src/kdl/nodes		0
nim	initKNode	kdl/nodes.html#initKNode,string,openArray[KdlVal],openArray[KdlNode]	proc initKNode(name: string; tag = string.none;\n          args: openArray[KdlVal] = newSeq[KdlVal]();\n          props = initTable[string, KdlVal]();\n          children: openArray[KdlNode] = newSeq[KdlNode]()): KdlNode		10
nim	initKVal	kdl/nodes.html#initKVal,string	proc initKVal(val: string; tag = string.none): KdlVal		19
nim	initKVal	kdl/nodes.html#initKVal,SomeFloat	proc initKVal(val: SomeFloat; tag = string.none): KdlVal		22
nim	initKVal	kdl/nodes.html#initKVal,bool	proc initKVal(val: bool; tag = string.none): KdlVal		25
nim	initKVal	kdl/nodes.html#initKVal,SomeInteger	proc initKVal(val: SomeInteger; tag = string.none): KdlVal		28
nim	initKVal	kdl/nodes.html#initKVal	proc initKVal(val: typeof(nil); tag = string.none): KdlVal		31
nim	initKVal	kdl/nodes.html#initKVal,KdlVal	proc initKVal(val: KdlVal): KdlVal		34
nim	initKString	kdl/nodes.html#initKString	proc initKString(val = string.default; tag = string.none): KdlVal		37
nim	initKFloat	kdl/nodes.html#initKFloat,SomeFloat	proc initKFloat(val: SomeFloat = float.default; tag = string.none): KdlVal		40
nim	initKBool	kdl/nodes.html#initKBool	proc initKBool(val = bool.default; tag = string.none): KdlVal		43
nim	initKNull	kdl/nodes.html#initKNull	proc initKNull(tag = string.none): KdlVal		46
nim	initKInt	kdl/nodes.html#initKInt,SomeInteger	proc initKInt(val: SomeInteger = int64.default; tag = string.none): KdlVal		49
nim	isString	kdl/nodes.html#isString,KdlVal	proc isString(val: KdlVal): bool		54
nim	isFloat	kdl/nodes.html#isFloat,KdlVal	proc isFloat(val: KdlVal): bool		57
nim	isBool	kdl/nodes.html#isBool,KdlVal	proc isBool(val: KdlVal): bool		60
nim	isInt	kdl/nodes.html#isInt,KdlVal	proc isInt(val: KdlVal): bool		63
nim	isNull	kdl/nodes.html#isNull,KdlVal	proc isNull(val: KdlVal): bool		66
nim	isEmpty	kdl/nodes.html#isEmpty,KdlVal	proc isEmpty(val: KdlVal): bool		69
nim	getString	kdl/nodes.html#getString,KdlVal	proc getString(val: KdlVal): string		74
nim	getFloat	kdl/nodes.html#getFloat,KdlVal	proc getFloat(val: KdlVal): float		78
nim	getBool	kdl/nodes.html#getBool,KdlVal	proc getBool(val: KdlVal): bool		82
nim	getInt	kdl/nodes.html#getInt,KdlVal	proc getInt(val: KdlVal): int64		86
nim	get	kdl/nodes.html#get,KdlVal,typedesc[T]	proc get[T: Value](val: KdlVal; x: typedesc[T]): T		90
nim	setString	kdl/nodes.html#setString,KdlVal,string	proc setString(val: var KdlVal; x: string)		135
nim	setFloat	kdl/nodes.html#setFloat,KdlVal,SomeFloat	proc setFloat(val: var KdlVal; x: SomeFloat)		139
nim	setBool	kdl/nodes.html#setBool,KdlVal,bool	proc setBool(val: var KdlVal; x: bool)		143
nim	setInt	kdl/nodes.html#setInt,KdlVal,SomeInteger	proc setInt(val: var KdlVal; x: SomeInteger)		147
nim	setTo	kdl/nodes.html#setTo,KdlVal,T	proc setTo[T: Value](val: var KdlVal; x: T)		151
nim	`$`	kdl/nodes.html#$,KdlVal	proc `$`(val: KdlVal): string		176
nim	inline	kdl/nodes.html#inline,KdlDoc	proc inline(doc: KdlDoc): string		196
nim	inline	kdl/nodes.html#inline,KdlNode	proc inline(node: KdlNode): string		198
nim	`$`	kdl/nodes.html#$,KdlDoc	proc `$`(doc: KdlDoc): string		236
nim	`$`	kdl/nodes.html#$,KdlNode	proc `$`(node: KdlNode): string		238
nim	`==`	kdl/nodes.html#==,KdlVal,KdlVal	proc `==`(val1, val2: KdlVal): bool		277
nim	`==`	kdl/nodes.html#==,KdlVal,T	proc `==`[T: Value](val: KdlVal; x: T): bool		294
nim	`==`	kdl/nodes.html#==,KdlNode,KdlNode	proc `==`(node1, node2: KdlNode): bool		317
nim	`[]`	kdl/nodes.html#[],KdlNode,string	proc `[]`(node: KdlNode; key: string): KdlVal		321
nim	`[]`	kdl/nodes.html#[],KdlNode,string_2	proc `[]`(node: var KdlNode; key: string): var KdlVal		325
nim	`[]=`	kdl/nodes.html#[]=,KdlNode,string,KdlVal	proc `[]=`(node: var KdlNode; key: string; val: KdlVal)		329
nim	contains	kdl/nodes.html#contains,KdlNode,string	proc contains(node: KdlNode; key: string): bool		333
nim	contains	kdl/nodes.html#contains,KdlNode,KdlVal	proc contains(node: KdlNode; val: KdlVal): bool		337
nim	contains	kdl/nodes.html#contains,KdlNode,KdlNode	proc contains(node: KdlNode; child: KdlNode): bool		341
nim	contains	kdl/nodes.html#contains,KdlDoc,string	proc contains(doc: KdlDoc; name: string): bool		345
nim	add	kdl/nodes.html#add,KdlNode,KdlVal	proc add(node: var KdlNode; val: KdlVal)		351
nim	add	kdl/nodes.html#add,KdlNode,KdlNode	proc add(node: var KdlNode; child: KdlNode)		356
nim	findFirst	kdl/nodes.html#findFirst,KdlDoc,string	proc findFirst(doc: KdlDoc; name: string): int		361
nim	findLast	kdl/nodes.html#findLast,KdlDoc,string	proc findLast(doc: KdlDoc; name: string): int		370
nim	find	kdl/nodes.html#find,KdlDoc,string	proc find(doc: KdlDoc; name: string): seq[KdlNode]		378
nim	toKdlVal	kdl/nodes.html#toKdlVal.m,untyped	macro toKdlVal(body: untyped): KdlVal		447
nim	toKdlNode	kdl/nodes.html#toKdlNode.m,untyped	macro toKdlNode(body: untyped): KdlNode		453
nim	toKdlDoc	kdl/nodes.html#toKdlDoc.m,untyped	macro toKdlDoc(body: untyped): KdlDoc		475
nim	toKdlArgs	kdl/nodes.html#toKdlArgs.m,varargs[untyped]	macro toKdlArgs(args: varargs[untyped]): untyped		502
nim	toKdlProps	kdl/nodes.html#toKdlProps.m,untyped	macro toKdlProps(props: untyped): Table[string, KdlVal]		515
nimgrp	==	kdl/nodes.html#==-procs-all	proc		277
nimgrp	$	kdl/nodes.html#$-procs-all	proc		176
nimgrp	initkval	kdl/nodes.html#initKVal-procs-all	proc		19
nimgrp	inline	kdl/nodes.html#inline-procs-all	proc		196
nimgrp	contains	kdl/nodes.html#contains-procs-all	proc		333
nimgrp	[]	kdl/nodes.html#[]-procs-all	proc		321
nimgrp	add	kdl/nodes.html#add-procs-all	proc		351
